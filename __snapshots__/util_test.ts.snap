export const snapshot = {};

snapshot[`summarizeVersionBumpsByModule() 1`] = `
[
  {
    commits: [
      {
        body: "",
        hash: "0000000000000000000000000000000000000000",
        subject: "feat(collections): pass \`key\` to \`mapValues()\` transformer (#4127)",
        tag: "feat",
      },
    ],
    module: "collections",
    version: "minor",
  },
  {
    commits: [
      {
        body: "",
        hash: "0000000000000000000000000000000000000000",
        subject: "refactor(console): rename \`_rle\` to \`_run_length.ts\` (#4212)",
        tag: "refactor",
      },
    ],
    module: "console",
    version: "patch",
  },
  {
    commits: [
      {
        body: "",
        hash: "0000000000000000000000000000000000000000",
        subject: "chore(crypto): upgrade to \`rust@1.75.0\` and \`wasmbuild@0.15.5\` (#4193)",
        tag: "chore",
      },
    ],
    module: "crypto",
    version: "patch",
  },
  {
    commits: [
      {
        body: "",
        hash: "0000000000000000000000000000000000000000",
        subject: "fix(expect): fix the function signature of \`toMatchObject()\` (#4202)",
        tag: "fix",
      },
    ],
    module: "expect",
    version: "patch",
  },
  {
    commits: [
      {
        body: "",
        hash: "0000000000000000000000000000000000000000",
        subject: "fix(flags): correct deprecation notices (#4207)",
        tag: "fix",
      },
    ],
    module: "flags",
    version: "patch",
  },
  {
    commits: [
      {
        body: "",
        hash: "0000000000000000000000000000000000000000",
        subject: "fix(fmt): correct \`stripColor()\` deprecation notice (#4208)",
        tag: "fix",
      },
    ],
    module: "fmt",
    version: "patch",
  },
  {
    commits: [
      {
        body: "",
        hash: "0000000000000000000000000000000000000000",
        subject: "BREAKING(http): remove \`CookieMap\` (#4179)",
        tag: "BREAKING",
      },
      {
        body: "",
        hash: "0000000000000000000000000000000000000000",
        subject: "feat(tools,log,http,semver): check mod exports, export items consistently from mod.ts  (#4229)",
        tag: "feat",
      },
      {
        body: "",
        hash: "0000000000000000000000000000000000000000",
        subject: "docs(http): complete documentation (#4209)",
        tag: "docs",
      },
    ],
    module: "http",
    version: "major",
  },
  {
    commits: [
      {
        body: "",
        hash: "0000000000000000000000000000000000000000",
        subject: "BREAKING(io): remove \`types.d.ts\` (#4237)",
        tag: "BREAKING",
      },
      {
        body: "",
        hash: "0000000000000000000000000000000000000000",
        subject: "feat(io): un-deprecate \`Buffer\` (#4184)",
        tag: "feat",
      },
    ],
    module: "io",
    version: "major",
  },
  {
    commits: [
      {
        body: "* BREAKING(log): remove \`handlers.ts\`

* fix

* BREAKING(log): remove string formatter",
        hash: "0000000000000000000000000000000000000000",
        subject: "BREAKING(log): remove string formatter (#4239)",
        tag: "BREAKING",
      },
      {
        body: "",
        hash: "0000000000000000000000000000000000000000",
        subject: "BREAKING(log): single-export handler files (#4236)",
        tag: "BREAKING",
      },
      {
        body: "",
        hash: "0000000000000000000000000000000000000000",
        subject: "feat(tools,log,http,semver): check mod exports, export items consistently from mod.ts  (#4229)",
        tag: "feat",
      },
      {
        body: "",
        hash: "0000000000000000000000000000000000000000",
        subject: "feat(log): make handlers disposable (#4195)",
        tag: "feat",
      },
      {
        body: "",
        hash: "0000000000000000000000000000000000000000",
        subject: "fix(log): make \`flattenArgs()\` private (#4214)",
        tag: "fix",
      },
      {
        body: "",
        hash: "0000000000000000000000000000000000000000",
        subject: "refactor(log): tidy imports and exports (#4215)",
        tag: "refactor",
      },
      {
        body: "",
        hash: "0000000000000000000000000000000000000000",
        subject: "refactor(log): replace deprecated imports (#4188)",
        tag: "refactor",
      },
    ],
    module: "log",
    version: "major",
  },
  {
    commits: [
      {
        body: "",
        hash: "0000000000000000000000000000000000000000",
        subject: "docs(media_types): complete documentation (#4219)",
        tag: "docs",
      },
    ],
    module: "media_types",
    version: "patch",
  },
  {
    commits: [
      {
        body: "",
        hash: "0000000000000000000000000000000000000000",
        subject: "docs(msgpack): complete documentation (#4220)",
        tag: "docs",
      },
    ],
    module: "msgpack",
    version: "patch",
  },
  {
    commits: [
      {
        body: "",
        hash: "0000000000000000000000000000000000000000",
        subject: "deprecation(path): split off all constants into their own files and deprecate old names (#4153)",
        tag: "deprecation",
      },
    ],
    module: "path",
    version: "patch",
  },
  {
    commits: [
      {
        body: "",
        hash: "0000000000000000000000000000000000000000",
        subject: "BREAKING(semver): remove \`FormatStyle\` (#4182)",
        tag: "BREAKING",
      },
      {
        body: "",
        hash: "0000000000000000000000000000000000000000",
        subject: "BREAKING(semver): remove \`compareBuild()\` (#4181)",
        tag: "BREAKING",
      },
      {
        body: "",
        hash: "0000000000000000000000000000000000000000",
        subject: "BREAKING(semver): remove \`rsort()\` (#4180)",
        tag: "BREAKING",
      },
      {
        body: "",
        hash: "0000000000000000000000000000000000000000",
        subject: "feat(tools,log,http,semver): check mod exports, export items consistently from mod.ts  (#4229)",
        tag: "feat",
      },
      {
        body: "",
        hash: "0000000000000000000000000000000000000000",
        subject: "deprecation(semver): rename \`eq()\`, \`neq()\`, \`lt()\`, \`lte()\`, \`gt()\` and \`gte()\` (#4083)",
        tag: "deprecation",
      },
      {
        body: "",
        hash: "0000000000000000000000000000000000000000",
        subject: "deprecation(semver): deprecate \`SemVerRange\`, introduce \`Range\` (#4161)",
        tag: "deprecation",
      },
      {
        body: "",
        hash: "0000000000000000000000000000000000000000",
        subject: "deprecation(semver): deprecate \`outside()\` (#4185)",
        tag: "deprecation",
      },
      {
        body: "",
        hash: "0000000000000000000000000000000000000000",
        subject: "refactor(semver): replace \`parseComparator()\` with comparator objects (#4204)",
        tag: "refactor",
      },
    ],
    module: "semver",
    version: "major",
  },
  {
    commits: [
      {
        body: "",
        hash: "0000000000000000000000000000000000000000",
        subject: "BREAKING(streams): remove \`readAll()\`, \`writeAll()\` and \`copy()\` (#4238)",
        tag: "BREAKING",
      },
      {
        body: "",
        hash: "0000000000000000000000000000000000000000",
        subject: "feat(streams)!: remove \`readAll()\`, \`writeAll()\` and \`copy()\` (#4238)",
        tag: "BREAKING",
      },
      {
        body: "",
        hash: "0000000000000000000000000000000000000000",
        subject: "docs(streams): remove \`Deno.metrics()\` use in example (#4217)",
        tag: "docs",
      },
    ],
    module: "streams",
    version: "major",
  },
  {
    commits: [
      {
        body: "",
        hash: "0000000000000000000000000000000000000000",
        subject: "fix(toml): \`parse()\` duplicates the character next to reserved escape sequences (#4192)",
        tag: "fix",
      },
      {
        body: "",
        hash: "0000000000000000000000000000000000000000",
        subject: "docs(toml): complete documentation (#4223)",
        tag: "docs",
      },
      {
        body: "",
        hash: "0000000000000000000000000000000000000000",
        subject: "test(toml): improve test coverage (#4211)",
        tag: "test",
      },
    ],
    module: "toml",
    version: "patch",
  },
  {
    commits: [
      {
        body: "",
        hash: "0000000000000000000000000000000000000000",
        subject: "feat(tools,log,http,semver): check mod exports, export items consistently from mod.ts  (#4229)",
        tag: "feat",
      },
    ],
    module: "tools",
    version: "minor",
  },
  {
    commits: [
      {
        body: "",
        hash: "0000000000000000000000000000000000000000",
        subject: "refactor(using): use \`using\` keyword for Explicit Resource Management (#4143)",
        tag: "refactor",
      },
    ],
    module: "using",
    version: "patch",
  },
  {
    commits: [
      {
        body: "",
        hash: "0000000000000000000000000000000000000000",
        subject: "refactor(webgpu): use internal \`Deno.close()\` for cleanup of WebGPU resources (#4231)",
        tag: "refactor",
      },
    ],
    module: "webgpu",
    version: "patch",
  },
]
`;

snapshot[`getWorkspaceModules() 1`] = `
[
  {
    [Symbol(path)]: "testdata/basic/foo/deno.json",
    name: "@scope/foo",
    version: "1.2.3",
  },
  {
    [Symbol(path)]: "testdata/basic/bar/deno.json",
    name: "@scope/bar",
    version: "2.3.4",
  },
  {
    [Symbol(path)]: "testdata/basic/baz/deno.json",
    name: "@scope/baz",
    version: "0.2.3",
  },
  {
    [Symbol(path)]: "testdata/basic/qux/deno.jsonc",
    name: "@scope/qux",
    version: "0.3.4",
  },
  {
    [Symbol(path)]: "testdata/basic/quux/deno.json",
    name: "@scope/quux",
    version: "0.0.0",
  },
]
`;

snapshot[`createReleaseNote() 1`] = `
"### 1970.01.01

#### @std/collections 0.213.1 (patch)
- feat(collections): pass \`key\` to \`mapValues()\` transformer (#4127)

#### @std/console 0.213.1 (patch)
- refactor(console): rename \`_rle\` to \`_run_length.ts\` (#4212)

#### @std/crypto 0.213.1 (patch)
- chore(crypto): upgrade to \`rust@1.75.0\` and \`wasmbuild@0.15.5\` (#4193)

#### @std/expect 0.213.1 (patch)
- fix(expect): fix the function signature of \`toMatchObject()\` (#4202)

#### @std/flags 0.213.1 (patch)
- fix(flags): correct deprecation notices (#4207)

#### @std/fmt 0.213.1 (patch)
- fix(fmt): correct \`stripColor()\` deprecation notice (#4208)

#### @std/http 0.214.0 (minor)
- BREAKING(http): remove \`CookieMap\` (#4179)
- feat(tools,log,http,semver): check mod exports, export items consistently from mod.ts  (#4229)
- docs(http): complete documentation (#4209)

#### @std/io 0.214.0 (minor)
- BREAKING(io): remove \`types.d.ts\` (#4237)
- feat(io): un-deprecate \`Buffer\` (#4184)

#### @std/log 0.214.0 (minor)
- BREAKING(log): remove string formatter (#4239)
- BREAKING(log): single-export handler files (#4236)
- feat(tools,log,http,semver): check mod exports, export items consistently from mod.ts  (#4229)
- feat(log): make handlers disposable (#4195)
- fix(log): make \`flattenArgs()\` private (#4214)
- refactor(log): tidy imports and exports (#4215)
- refactor(log): replace deprecated imports (#4188)

#### @std/media_types 0.213.1 (patch)
- docs(media_types): complete documentation (#4219)

#### @std/msgpack 0.213.1 (patch)
- docs(msgpack): complete documentation (#4220)

#### @std/path 0.213.1 (patch)
- deprecation(path): split off all constants into their own files and deprecate old names (#4153)

#### @std/semver 0.214.0 (minor)
- BREAKING(semver): remove \`FormatStyle\` (#4182)
- BREAKING(semver): remove \`compareBuild()\` (#4181)
- BREAKING(semver): remove \`rsort()\` (#4180)
- feat(tools,log,http,semver): check mod exports, export items consistently from mod.ts  (#4229)
- deprecation(semver): rename \`eq()\`, \`neq()\`, \`lt()\`, \`lte()\`, \`gt()\` and \`gte()\` (#4083)
- deprecation(semver): deprecate \`SemVerRange\`, introduce \`Range\` (#4161)
- deprecation(semver): deprecate \`outside()\` (#4185)
- refactor(semver): replace \`parseComparator()\` with comparator objects (#4204)

#### @std/streams 0.214.0 (minor)
- BREAKING(streams): remove \`readAll()\`, \`writeAll()\` and \`copy()\` (#4238)
- feat(streams)!: remove \`readAll()\`, \`writeAll()\` and \`copy()\` (#4238)
- docs(streams): remove \`Deno.metrics()\` use in example (#4217)

#### @std/toml 0.213.1 (patch)
- fix(toml): \`parse()\` duplicates the character next to reserved escape sequences (#4192)
- docs(toml): complete documentation (#4223)
- test(toml): improve test coverage (#4211)

#### @std/webgpu 0.213.1 (patch)
- refactor(webgpu): use internal \`Deno.close()\` for cleanup of WebGPU resources (#4231)
"
`;

snapshot[`createReleaseNote() with GitHub links - consolidated tags 1`] = `
{
  content: "### 1970.01.01

#### @std/collections [0.213.1](https://github.com/denoland/deno_std/compare/release-2024.12.31...release-1970.01.01) (patch)
- feat(collections): pass \`key\` to \`mapValues()\` transformer (#4127) ([0000000](https://github.com/denoland/deno_std/commit/0000000000000000000000000000000000000000))

#### @std/console [0.213.1](https://github.com/denoland/deno_std/compare/release-2024.12.31...release-1970.01.01) (patch)
- refactor(console): rename \`_rle\` to \`_run_length.ts\` (#4212) ([0000000](https://github.com/denoland/deno_std/commit/0000000000000000000000000000000000000000))

#### @std/crypto [0.213.1](https://github.com/denoland/deno_std/compare/release-2024.12.31...release-1970.01.01) (patch)
- chore(crypto): upgrade to \`rust@1.75.0\` and \`wasmbuild@0.15.5\` (#4193) ([0000000](https://github.com/denoland/deno_std/commit/0000000000000000000000000000000000000000))

#### @std/expect [0.213.1](https://github.com/denoland/deno_std/compare/release-2024.12.31...release-1970.01.01) (patch)
- fix(expect): fix the function signature of \`toMatchObject()\` (#4202) ([0000000](https://github.com/denoland/deno_std/commit/0000000000000000000000000000000000000000))

#### @std/flags [0.213.1](https://github.com/denoland/deno_std/compare/release-2024.12.31...release-1970.01.01) (patch)
- fix(flags): correct deprecation notices (#4207) ([0000000](https://github.com/denoland/deno_std/commit/0000000000000000000000000000000000000000))

#### @std/fmt [0.213.1](https://github.com/denoland/deno_std/compare/release-2024.12.31...release-1970.01.01) (patch)
- fix(fmt): correct \`stripColor()\` deprecation notice (#4208) ([0000000](https://github.com/denoland/deno_std/commit/0000000000000000000000000000000000000000))

#### @std/http [0.214.0](https://github.com/denoland/deno_std/compare/release-2024.12.31...release-1970.01.01) (minor)
- BREAKING(http): remove \`CookieMap\` (#4179) ([0000000](https://github.com/denoland/deno_std/commit/0000000000000000000000000000000000000000))
- feat(tools,log,http,semver): check mod exports, export items consistently from mod.ts  (#4229) ([0000000](https://github.com/denoland/deno_std/commit/0000000000000000000000000000000000000000))
- docs(http): complete documentation (#4209) ([0000000](https://github.com/denoland/deno_std/commit/0000000000000000000000000000000000000000))

#### @std/io [0.214.0](https://github.com/denoland/deno_std/compare/release-2024.12.31...release-1970.01.01) (minor)
- BREAKING(io): remove \`types.d.ts\` (#4237) ([0000000](https://github.com/denoland/deno_std/commit/0000000000000000000000000000000000000000))
- feat(io): un-deprecate \`Buffer\` (#4184) ([0000000](https://github.com/denoland/deno_std/commit/0000000000000000000000000000000000000000))

#### @std/log [0.214.0](https://github.com/denoland/deno_std/compare/release-2024.12.31...release-1970.01.01) (minor)
- BREAKING(log): remove string formatter (#4239) ([0000000](https://github.com/denoland/deno_std/commit/0000000000000000000000000000000000000000))
- BREAKING(log): single-export handler files (#4236) ([0000000](https://github.com/denoland/deno_std/commit/0000000000000000000000000000000000000000))
- feat(tools,log,http,semver): check mod exports, export items consistently from mod.ts  (#4229) ([0000000](https://github.com/denoland/deno_std/commit/0000000000000000000000000000000000000000))
- feat(log): make handlers disposable (#4195) ([0000000](https://github.com/denoland/deno_std/commit/0000000000000000000000000000000000000000))
- fix(log): make \`flattenArgs()\` private (#4214) ([0000000](https://github.com/denoland/deno_std/commit/0000000000000000000000000000000000000000))
- refactor(log): tidy imports and exports (#4215) ([0000000](https://github.com/denoland/deno_std/commit/0000000000000000000000000000000000000000))
- refactor(log): replace deprecated imports (#4188) ([0000000](https://github.com/denoland/deno_std/commit/0000000000000000000000000000000000000000))

#### @std/media_types [0.213.1](https://github.com/denoland/deno_std/compare/release-2024.12.31...release-1970.01.01) (patch)
- docs(media_types): complete documentation (#4219) ([0000000](https://github.com/denoland/deno_std/commit/0000000000000000000000000000000000000000))

#### @std/msgpack [0.213.1](https://github.com/denoland/deno_std/compare/release-2024.12.31...release-1970.01.01) (patch)
- docs(msgpack): complete documentation (#4220) ([0000000](https://github.com/denoland/deno_std/commit/0000000000000000000000000000000000000000))

#### @std/path [0.213.1](https://github.com/denoland/deno_std/compare/release-2024.12.31...release-1970.01.01) (patch)
- deprecation(path): split off all constants into their own files and deprecate old names (#4153) ([0000000](https://github.com/denoland/deno_std/commit/0000000000000000000000000000000000000000))

#### @std/semver [0.214.0](https://github.com/denoland/deno_std/compare/release-2024.12.31...release-1970.01.01) (minor)
- BREAKING(semver): remove \`FormatStyle\` (#4182) ([0000000](https://github.com/denoland/deno_std/commit/0000000000000000000000000000000000000000))
- BREAKING(semver): remove \`compareBuild()\` (#4181) ([0000000](https://github.com/denoland/deno_std/commit/0000000000000000000000000000000000000000))
- BREAKING(semver): remove \`rsort()\` (#4180) ([0000000](https://github.com/denoland/deno_std/commit/0000000000000000000000000000000000000000))
- feat(tools,log,http,semver): check mod exports, export items consistently from mod.ts  (#4229) ([0000000](https://github.com/denoland/deno_std/commit/0000000000000000000000000000000000000000))
- deprecation(semver): rename \`eq()\`, \`neq()\`, \`lt()\`, \`lte()\`, \`gt()\` and \`gte()\` (#4083) ([0000000](https://github.com/denoland/deno_std/commit/0000000000000000000000000000000000000000))
- deprecation(semver): deprecate \`SemVerRange\`, introduce \`Range\` (#4161) ([0000000](https://github.com/denoland/deno_std/commit/0000000000000000000000000000000000000000))
- deprecation(semver): deprecate \`outside()\` (#4185) ([0000000](https://github.com/denoland/deno_std/commit/0000000000000000000000000000000000000000))
- refactor(semver): replace \`parseComparator()\` with comparator objects (#4204) ([0000000](https://github.com/denoland/deno_std/commit/0000000000000000000000000000000000000000))

#### @std/streams [0.214.0](https://github.com/denoland/deno_std/compare/release-2024.12.31...release-1970.01.01) (minor)
- BREAKING(streams): remove \`readAll()\`, \`writeAll()\` and \`copy()\` (#4238) ([0000000](https://github.com/denoland/deno_std/commit/0000000000000000000000000000000000000000))
- feat(streams)!: remove \`readAll()\`, \`writeAll()\` and \`copy()\` (#4238) ([0000000](https://github.com/denoland/deno_std/commit/0000000000000000000000000000000000000000))
- docs(streams): remove \`Deno.metrics()\` use in example (#4217) ([0000000](https://github.com/denoland/deno_std/commit/0000000000000000000000000000000000000000))

#### @std/toml [0.213.1](https://github.com/denoland/deno_std/compare/release-2024.12.31...release-1970.01.01) (patch)
- fix(toml): \`parse()\` duplicates the character next to reserved escape sequences (#4192) ([0000000](https://github.com/denoland/deno_std/commit/0000000000000000000000000000000000000000))
- docs(toml): complete documentation (#4223) ([0000000](https://github.com/denoland/deno_std/commit/0000000000000000000000000000000000000000))
- test(toml): improve test coverage (#4211) ([0000000](https://github.com/denoland/deno_std/commit/0000000000000000000000000000000000000000))

#### @std/webgpu [0.213.1](https://github.com/denoland/deno_std/compare/release-2024.12.31...release-1970.01.01) (patch)
- refactor(webgpu): use internal \`Deno.close()\` for cleanup of WebGPU resources (#4231) ([0000000](https://github.com/denoland/deno_std/commit/0000000000000000000000000000000000000000))
",
  mode: "consolidated",
}
`;

snapshot[`createReleaseNote() with GitHub links - individual tags 1`] = `
{
  content: "### 1970.01.01

#### @std/collections [0.213.1](https://github.com/denoland/deno_std/compare/@std/collections@0.213.0...@std/collections@0.213.1) (patch)
- feat(collections): pass \`key\` to \`mapValues()\` transformer (#4127) ([0000000](https://github.com/denoland/deno_std/commit/0000000000000000000000000000000000000000))

#### @std/console [0.213.1](https://github.com/denoland/deno_std/compare/@std/console@0.213.0...@std/console@0.213.1) (patch)
- refactor(console): rename \`_rle\` to \`_run_length.ts\` (#4212) ([0000000](https://github.com/denoland/deno_std/commit/0000000000000000000000000000000000000000))

#### @std/crypto [0.213.1](https://github.com/denoland/deno_std/compare/@std/crypto@0.213.0...@std/crypto@0.213.1) (patch)
- chore(crypto): upgrade to \`rust@1.75.0\` and \`wasmbuild@0.15.5\` (#4193) ([0000000](https://github.com/denoland/deno_std/commit/0000000000000000000000000000000000000000))

#### @std/expect [0.213.1](https://github.com/denoland/deno_std/compare/@std/expect@0.213.0...@std/expect@0.213.1) (patch)
- fix(expect): fix the function signature of \`toMatchObject()\` (#4202) ([0000000](https://github.com/denoland/deno_std/commit/0000000000000000000000000000000000000000))

#### @std/flags [0.213.1](https://github.com/denoland/deno_std/compare/@std/flags@0.213.0...@std/flags@0.213.1) (patch)
- fix(flags): correct deprecation notices (#4207) ([0000000](https://github.com/denoland/deno_std/commit/0000000000000000000000000000000000000000))

#### @std/fmt [0.213.1](https://github.com/denoland/deno_std/compare/@std/fmt@0.213.0...@std/fmt@0.213.1) (patch)
- fix(fmt): correct \`stripColor()\` deprecation notice (#4208) ([0000000](https://github.com/denoland/deno_std/commit/0000000000000000000000000000000000000000))

#### @std/http [0.214.0](https://github.com/denoland/deno_std/compare/@std/http@0.213.0...@std/http@0.214.0) (minor)
- BREAKING(http): remove \`CookieMap\` (#4179) ([0000000](https://github.com/denoland/deno_std/commit/0000000000000000000000000000000000000000))
- feat(tools,log,http,semver): check mod exports, export items consistently from mod.ts  (#4229) ([0000000](https://github.com/denoland/deno_std/commit/0000000000000000000000000000000000000000))
- docs(http): complete documentation (#4209) ([0000000](https://github.com/denoland/deno_std/commit/0000000000000000000000000000000000000000))

#### @std/io [0.214.0](https://github.com/denoland/deno_std/compare/@std/io@0.213.0...@std/io@0.214.0) (minor)
- BREAKING(io): remove \`types.d.ts\` (#4237) ([0000000](https://github.com/denoland/deno_std/commit/0000000000000000000000000000000000000000))
- feat(io): un-deprecate \`Buffer\` (#4184) ([0000000](https://github.com/denoland/deno_std/commit/0000000000000000000000000000000000000000))

#### @std/log [0.214.0](https://github.com/denoland/deno_std/compare/@std/log@0.213.0...@std/log@0.214.0) (minor)
- BREAKING(log): remove string formatter (#4239) ([0000000](https://github.com/denoland/deno_std/commit/0000000000000000000000000000000000000000))
- BREAKING(log): single-export handler files (#4236) ([0000000](https://github.com/denoland/deno_std/commit/0000000000000000000000000000000000000000))
- feat(tools,log,http,semver): check mod exports, export items consistently from mod.ts  (#4229) ([0000000](https://github.com/denoland/deno_std/commit/0000000000000000000000000000000000000000))
- feat(log): make handlers disposable (#4195) ([0000000](https://github.com/denoland/deno_std/commit/0000000000000000000000000000000000000000))
- fix(log): make \`flattenArgs()\` private (#4214) ([0000000](https://github.com/denoland/deno_std/commit/0000000000000000000000000000000000000000))
- refactor(log): tidy imports and exports (#4215) ([0000000](https://github.com/denoland/deno_std/commit/0000000000000000000000000000000000000000))
- refactor(log): replace deprecated imports (#4188) ([0000000](https://github.com/denoland/deno_std/commit/0000000000000000000000000000000000000000))

#### @std/media_types [0.213.1](https://github.com/denoland/deno_std/compare/@std/media_types@0.213.0...@std/media_types@0.213.1) (patch)
- docs(media_types): complete documentation (#4219) ([0000000](https://github.com/denoland/deno_std/commit/0000000000000000000000000000000000000000))

#### @std/msgpack [0.213.1](https://github.com/denoland/deno_std/compare/@std/msgpack@0.213.0...@std/msgpack@0.213.1) (patch)
- docs(msgpack): complete documentation (#4220) ([0000000](https://github.com/denoland/deno_std/commit/0000000000000000000000000000000000000000))

#### @std/path [0.213.1](https://github.com/denoland/deno_std/compare/@std/path@0.213.0...@std/path@0.213.1) (patch)
- deprecation(path): split off all constants into their own files and deprecate old names (#4153) ([0000000](https://github.com/denoland/deno_std/commit/0000000000000000000000000000000000000000))

#### @std/semver [0.214.0](https://github.com/denoland/deno_std/compare/@std/semver@0.213.0...@std/semver@0.214.0) (minor)
- BREAKING(semver): remove \`FormatStyle\` (#4182) ([0000000](https://github.com/denoland/deno_std/commit/0000000000000000000000000000000000000000))
- BREAKING(semver): remove \`compareBuild()\` (#4181) ([0000000](https://github.com/denoland/deno_std/commit/0000000000000000000000000000000000000000))
- BREAKING(semver): remove \`rsort()\` (#4180) ([0000000](https://github.com/denoland/deno_std/commit/0000000000000000000000000000000000000000))
- feat(tools,log,http,semver): check mod exports, export items consistently from mod.ts  (#4229) ([0000000](https://github.com/denoland/deno_std/commit/0000000000000000000000000000000000000000))
- deprecation(semver): rename \`eq()\`, \`neq()\`, \`lt()\`, \`lte()\`, \`gt()\` and \`gte()\` (#4083) ([0000000](https://github.com/denoland/deno_std/commit/0000000000000000000000000000000000000000))
- deprecation(semver): deprecate \`SemVerRange\`, introduce \`Range\` (#4161) ([0000000](https://github.com/denoland/deno_std/commit/0000000000000000000000000000000000000000))
- deprecation(semver): deprecate \`outside()\` (#4185) ([0000000](https://github.com/denoland/deno_std/commit/0000000000000000000000000000000000000000))
- refactor(semver): replace \`parseComparator()\` with comparator objects (#4204) ([0000000](https://github.com/denoland/deno_std/commit/0000000000000000000000000000000000000000))

#### @std/streams [0.214.0](https://github.com/denoland/deno_std/compare/@std/streams@0.213.0...@std/streams@0.214.0) (minor)
- BREAKING(streams): remove \`readAll()\`, \`writeAll()\` and \`copy()\` (#4238) ([0000000](https://github.com/denoland/deno_std/commit/0000000000000000000000000000000000000000))
- feat(streams)!: remove \`readAll()\`, \`writeAll()\` and \`copy()\` (#4238) ([0000000](https://github.com/denoland/deno_std/commit/0000000000000000000000000000000000000000))
- docs(streams): remove \`Deno.metrics()\` use in example (#4217) ([0000000](https://github.com/denoland/deno_std/commit/0000000000000000000000000000000000000000))

#### @std/toml [0.213.1](https://github.com/denoland/deno_std/compare/@std/toml@0.213.0...@std/toml@0.213.1) (patch)
- fix(toml): \`parse()\` duplicates the character next to reserved escape sequences (#4192) ([0000000](https://github.com/denoland/deno_std/commit/0000000000000000000000000000000000000000))
- docs(toml): complete documentation (#4223) ([0000000](https://github.com/denoland/deno_std/commit/0000000000000000000000000000000000000000))
- test(toml): improve test coverage (#4211) ([0000000](https://github.com/denoland/deno_std/commit/0000000000000000000000000000000000000000))

#### @std/webgpu [0.213.1](https://github.com/denoland/deno_std/compare/@std/webgpu@0.213.0...@std/webgpu@0.213.1) (patch)
- refactor(webgpu): use internal \`Deno.close()\` for cleanup of WebGPU resources (#4231) ([0000000](https://github.com/denoland/deno_std/commit/0000000000000000000000000000000000000000))
",
  mode: "individual",
}
`;

snapshot[`createReleaseNote() single-package format 1`] = `
{
  content: "### 1.1.0 (1970.01.01)

- feat: add new feature
- fix: fix critical bug
",
  type: "single-package-no-links",
}
`;

snapshot[`createReleaseNote() single-package format 2`] = `
{
  content: "### [1.1.0](https://github.com/owner/repo/compare/v1.0.0...v1.1.0) (1970.01.01)

- feat: add new feature ([abc1234](https://github.com/owner/repo/commit/abc1234567890abcdef1234567890abcdef123456))
- fix: fix critical bug ([def4567](https://github.com/owner/repo/commit/def4567890abcdef1234567890abcdef12345678))
",
  type: "single-package-with-links",
}
`;

snapshot[`createReleaseNote() workspace vs single-package format differences 1`] = `
{
  multiPackage: "### 1970.01.01

#### @test/package 1.1.0 (minor)
- feat: add new feature
",
  singlePackage: "### 1.1.0 (1970.01.01)

- feat: add new feature
",
}
`;

snapshot[`createReleaseNote() individual-package with different tag modes 1`] = `
{
  content: "### @scope/test-package [1.1.0](https://github.com/owner/repo/compare/@scope/test-package@1.0.0...@scope/test-package@1.1.0) (1970.01.01)

- feat(test-package): add new feature ([abc1234](https://github.com/owner/repo/commit/abc1234567890abcdef1234567890abcdef123456))
- fix(test-package): fix critical bug ([def4567](https://github.com/owner/repo/commit/def4567890abcdef1234567890abcdef12345678))
",
  mode: "individual-tags",
}
`;

snapshot[`createReleaseNote() individual-package with different tag modes 2`] = `
{
  content: "### @scope/test-package [1.1.0](https://github.com/owner/repo/compare/release-2024.12.31...release-1970.01.01) (1970.01.01)

- feat(test-package): add new feature ([abc1234](https://github.com/owner/repo/commit/abc1234567890abcdef1234567890abcdef123456))
- fix(test-package): fix critical bug ([def4567](https://github.com/owner/repo/commit/def4567890abcdef1234567890abcdef12345678))
",
  mode: "consolidated-tags",
}
`;

snapshot[`createReleaseNote() individual-package with different tag modes 3`] = `
{
  content: "### @scope/test-package 1.1.0 (1970.01.01)

- feat(test-package): add new feature ([abc1234](https://github.com/owner/repo/commit/abc1234567890abcdef1234567890abcdef123456))
- fix(test-package): fix critical bug ([def4567](https://github.com/owner/repo/commit/def4567890abcdef1234567890abcdef12345678))
",
  mode: "consolidated-tag-without-previous",
}
`;

snapshot[`createReleaseNote() backward compatibility 1`] = `
"### 1970.01.01

#### @scope/test-package 1.1.0 (minor)
- feat(test-package): add new feature
"
`;

snapshot[`createPrBody() 1`] = `
"The following updates are detected:

| module   | from    | to      | type  |
|----------|---------|---------|-------|
|collections|0.213.0|0.213.1|patch|
|console|0.213.0|0.213.1|patch|
|crypto|0.213.0|0.213.1|patch|
|expect|0.213.0|0.213.1|patch|
|flags|0.213.0|0.213.1|patch|
|fmt|0.213.0|0.213.1|patch|
|http|0.213.0|0.214.0|minor|
|io|0.213.0|0.214.0|minor|
|log|0.213.0|0.214.0|minor|
|media_types|0.213.0|0.213.1|patch|
|msgpack|0.213.0|0.213.1|patch|
|path|0.213.0|0.213.1|patch|
|semver|0.213.0|0.214.0|minor|
|streams|0.213.0|0.214.0|minor|
|toml|0.213.0|0.213.1|patch|
|webgpu|0.213.0|0.213.1|patch|

Please ensure:
- [ ] Versions in deno.json files are updated correctly
- [ ] Release notes are updated correctly



The following commits have unknown scopes. Please handle them manually if necessary:

- [feat(tools,log,http,semver): check mod exports, export items consistently from mod.ts  (#4229)](/denoland/deno_std/commit/0000000000000000000000000000000000000000)
- [refactor(using): use \`using\` keyword for Explicit Resource Management (#4143)](/denoland/deno_std/commit/0000000000000000000000000000000000000000)





---

To make edits to this PR:

\`\`\`sh
git fetch upstream release-1970-01-01-00-00-00 && git checkout -b release-1970-01-01-00-00-00 upstream/release-1970-01-01-00-00-00
\`\`\`
"
`;

snapshot[`createReleaseNote() format 1`] = `
"### @scope/test-package 1.1.0 (1970.01.01)

- feat(test-package): add new feature
- fix(test-package): fix critical bug
"
`;
